<!--
***********************************************************************************************
(c) 2012 Gavin Pugh http://www.gavpugh.com/ - Released under the open-source zlib license
***********************************************************************************************
-->

<!-- Largely based on: MSBuild\Microsoft.Cpp\v4.0\Platforms\Win32\Microsoft.Cpp.Win32.targets -->

<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(VCTargetsPath)\Platforms\Android\ImportBefore\*.targets" Condition="Exists('$(VCTargetsPath)\Platforms\Android\ImportBefore')" />
  <Import Project="$(VCTargetsPath)\Microsoft.CppCommon.targets" />

  <UsingTask TaskName="GCCCompile" AssemblyFile="$(VCTargetsPath)\Platforms\Android\vs-android.Build.CppTasks.Android.dll" />
  <UsingTask TaskName="GCCLink" AssemblyFile="$(VCTargetsPath)\Platforms\Android\vs-android.Build.CppTasks.Android.dll" />
  <UsingTask TaskName="GCCLib" AssemblyFile="$(VCTargetsPath)\Platforms\Android\vs-android.Build.CppTasks.Android.dll" />
  <UsingTask TaskName="AntBuild" AssemblyFile="$(VCTargetsPath)\Platforms\Android\vs-android.Build.CppTasks.Android.dll" />
  <UsingTask TaskName="AdbDeploy" AssemblyFile="$(VCTargetsPath)\Platforms\Android\vs-android.Build.CppTasks.Android.dll" />
  <UsingTask TaskName="VCMessage" AssemblyName="Microsoft.Build.CppTasks.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />


  <PropertyGroup>
    <!-- Enable incremental build by enable file tracking in tasks-->
    <TrackFileAccess Condition="'$(TrackFileAccess)' == ''">true</TrackFileAccess>
  </PropertyGroup>



  <!-- *******************************************************************************************
        CLCompile
       ******************************************************************************************* -->

  <Target Name="ClCompile"
          Condition="'@(ClCompile)' != ''"
          DependsOnTargets="SelectClCompile">

    <ItemGroup>
      <ClCompile>
        <CompileAs                    Condition="('%(ClCompile.CompileAs)' == 'Default' and '%(ClCompile.Extension)' == '.c')">CompileAsC</CompileAs>
        <CompileAs                    Condition="('%(ClCompile.CompileAs)' == 'Default' and '%(ClCompile.Extension)' == '.s')">CompileAsAsm</CompileAs>
        <CompileAs                    Condition="('%(ClCompile.CompileAs)' == 'Default' and '%(ClCompile.Extension)' == '.asm')">CompileAsAsm</CompileAs>
        <CompileAs                    Condition="('%(ClCompile.CompileAs)' == 'Default' and ('%(ClCompile.Extension)' != '.c' and '%(ClCompile.Extension)' != '.s' and '%(ClCompile.Extension)' != '.asm'))">CompileAsCpp</CompileAs>
        <MinimalRebuildFromTracking   Condition="'$(BuildType)' != 'Build' or '$(ForceRebuild)' == 'true'">false</MinimalRebuildFromTracking>
        <Architecture                 Condition="'$(AndroidArch)' == 'armv5te'">armv5te</Architecture>
        <Architecture                 Condition="'$(AndroidArch)' == 'armv7-a'">armv7-a</Architecture>
	  </ClCompile>
    </ItemGroup>

    <!-- Disable thumb switch for x86 builds -->
    <ItemGroup Condition="'$(PlatformShortName)' != 'arm'">
      <ClCompile>
        <ThumbMode>ignore</ThumbMode>
      </ClCompile>
    </ItemGroup>

    <GCCCompile Condition="'%(ClCompile.ExcludedFromBuild)'!='true'"
        BuildingInIDE                      ="$(BuildingInsideVisualStudio)"
        Sources                            ="@(ClCompile)"

        TrackerLogDirectory                ="%(ClCompile.TrackerLogDirectory)"

        TLogReadFiles                      ="@(CLTLogReadFiles)"
        TLogWriteFiles                     ="@(CLTLogWriteFiles)"
        ToolExe                            ="$(CLToolExe)"
        ToolPath                           ="$(CLToolPath)"
        TrackFileAccess                    ="$(TrackFileAccess)"
        MinimalRebuildFromTracking         ="%(ClCompile.MinimalRebuildFromTracking)"

        AcceptableNonZeroExitCodes         ="%(ClCompile.AcceptableNonZeroExitCodes)"

        EchoCommandLines                   ="%(ClCompile.EchoCommandLines)"
        GCCToolPath                        ="$(GccCompiler)"
        PropertyXmlFile                    ="$(VCTargetsPath)\Platforms\Android\Props\android_gcc_compile.xml"
    >
    </GCCCompile>

  </Target>



  <!-- *******************************************************************************************
        Lib
       ******************************************************************************************* -->

  <!-- Lib script based on: MSBuild\Microsoft.Cpp\v4.0\Microsoft.CppCommon.targets -->

  <Target Name="Lib"
          Condition="'@(Lib)' != ''">
    
    <ItemGroup>
      <Lib>
        <MinimalRebuildFromTracking Condition="'%(Lib.MinimalRebuildFromTracking)' == '' and '$(BuildType)' == 'Build' and '$(ForceRebuild)' != 'true'">true</MinimalRebuildFromTracking>
      </Lib>
    </ItemGroup>

    <GCCLib
        BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
		    Sources                        ="@(Lib)"

        OutputFile                     ="%(Lib.OutputFile)"

        TrackerLogDirectory            ="%(Lib.TrackerLogDirectory)"

        TLogReadFiles                  ="@(LIBTLogReadFiles)"
        TLogWriteFiles                 ="@(LIBTLogWriteFiles)"
        ToolExe                        ="$(LIBToolExe)"
        ToolPath                       ="$(LIBToolPath)"
        TrackFileAccess                ="$(TrackFileAccess)"
        MinimalRebuildFromTracking     ="%(Lib.MinimalRebuildFromTracking)"

        AcceptableNonZeroExitCodes     ="%(Lib.AcceptableNonZeroExitCodes)"

        EchoCommandLines               ="%(Lib.EchoCommandLines)"
        GCCToolPath                    ="$(GccLibrarian)"
        PropertyXmlFile                ="$(VCTargetsPath)\Platforms\Android\Props\android_gcc_lib.xml"
      >
      	<Output TaskParameter="SkippedExecution" PropertyName="LibSkippedExecution" />
    </GCCLib>

    <Message Condition="'$(LibSkippedExecution)' == 'false'" Text="$(MSBuildProjectFile) -&gt; $(TargetPath)" Importance="High" />
    
  </Target>
  


  <!-- *******************************************************************************************
        Link
       ******************************************************************************************* -->

  <Target Name="Link"
          Condition="'@(Link)' != ''">

    <PropertyGroup>
      <Link_MinimalRebuildFromTracking Condition="'@(Link->AnyHaveMetadataValue('MinimalRebuildFromTracking', 'false'))' == 'true'">false</Link_MinimalRebuildFromTracking>
      <Link_MinimalRebuildFromTracking Condition="'$(BuildType)' != 'Build' or '$(ForceRebuild)' == 'true'" >false</Link_MinimalRebuildFromTracking>
      <Link_MinimalRebuildFromTracking Condition="'$(Link_MinimalRebuildFromTracking)' == ''">true</Link_MinimalRebuildFromTracking>
    </PropertyGroup>

    <ItemGroup>
      <Link>
        <SystemLibraryDirectories Condition="'%(Link.LinkGccLibThumb)' == 'true'">%(Link.SystemLibraryDirectories);$(GccLibPath_Thumb)</SystemLibraryDirectories>
        <SystemLibraryDirectories Condition="'%(Link.LinkGccLibThumb)' != 'true'">%(Link.SystemLibraryDirectories);$(GccLibPath)</SystemLibraryDirectories>

        <StlLibs Condition="'%(Link.LinkGccLibThumb)' == 'true'">$(GccLibPath_Thumb)\crtbeginS.o;%(Link.StlLibs)</StlLibs>
        <StlLibs Condition="'%(Link.LinkGccLibThumb)' != 'true'">$(GccLibPath)\crtbeginS.o;%(Link.StlLibs)</StlLibs>        
      </Link>
    </ItemGroup>

    <GCCLink
        BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
        Sources                        ="@(Link)"

        OutputFile                     ="%(Link.OutputFile)"
        
        TrackerLogDirectory            ="%(Link.TrackerLogDirectory)"

        TLogReadFiles                  ="@(LinkTLogReadFiles)"
        TLogWriteFiles                 ="@(LinkTLogWriteFiles)"
        ToolExe                        ="$(LinkToolExe)"
        ToolPath                       ="$(LinkToolPath)"
        TrackFileAccess                ="$(TrackFileAccess)"
        MinimalRebuildFromTracking     ="$(Link_MinimalRebuildFromTracking)"

        AcceptableNonZeroExitCodes     ="%(Link.AcceptableNonZeroExitCodes)"

        EchoCommandLines               ="%(Link.EchoCommandLines)"        
        GCCToolPath                    ="$(GccLinker)"        
        PropertyXmlFile                ="$(VCTargetsPath)\Platforms\Android\Props\android_gcc_link.xml"
    >
      <Output TaskParameter="SkippedExecution" PropertyName="LinkSkippedExecution" />
    </GCCLink>

    <Message Condition="'$(LinkSkippedExecution)' == 'false'" Text="$(MSBuildProjectFile) -&gt; $(TargetPath)" Importance="High" />
    
  </Target>



  <!-- *******************************************************************************************
        AntBuild
       ******************************************************************************************* -->

  <!-- Hook in Ant Build if this is an application project -->
  <PropertyGroup Condition="'$(ConfigurationType)'=='Application'">
    <BuildLinkTargets>
      $(BuildLinkTargets);
      _BuildApk;
      _AdbDeployStep;
	</BuildLinkTargets>
    <BuildLinkAction>$(CommonBuildOnlyTargets);$(BeforeBuildLinkTargets);$(BuildLinkTargets);$(AfterBuildLinkTargets)</BuildLinkAction>
  </PropertyGroup>
  
  <Target Name="_AddAntBuild"
          DependsOnTargets="Link;">
    <ItemGroup>
      <AntBuild Include="$(TargetPath)"/>
    </ItemGroup>
  </Target>

  <Target Name="_AddAdbDeploy"
          DependsOnTargets="AntBuild;">
    <ItemGroup>
      <Deploy Include="$(TargetPath)"/>
    </ItemGroup>
  </Target>

  <Target Name="_BuildApk"
          DependsOnTargets="Link;_AddAntBuild;AntBuild;">
  </Target>

  <Target Name="_AdbDeployStep"
    DependsOnTargets="AntBuild;_AddAdbDeploy;PostAntDeploy;">
  </Target>
	
  <Target Name="AntBuild"
          Condition="'@(AntBuild)' != ''">

    <PropertyGroup>
      <AntBuild_MinimalRebuildFromTracking Condition="'$(BuildType)' != 'Build' or '$(ForceRebuild)' == 'true'">false</AntBuild_MinimalRebuildFromTracking>
      <AntBuild_MinimalRebuildFromTracking Condition="'$(AntBuild_MinimalRebuildFromTracking)' == ''">true</AntBuild_MinimalRebuildFromTracking>
    </PropertyGroup>
    
    <PropertyGroup>
      <ApkLibsPath Condition="'$(PlatformShortName)' == 'arm'">armeabi</ApkLibsPath>
      <ApkLibsPath Condition="'$(PlatformShortName)' == 'x86'">x86</ApkLibsPath>
      <ApkLibsPath Condition="'$(PlatformShortName)' == 'mips'">mips</ApkLibsPath>
    </PropertyGroup>
    
    <AntBuild
        BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
        Sources                        ="@(AntBuild)"

        ApkLibsPath					   ="$(ApkLibsPath)"
        
        AntBuildPath                   ="%(AntBuild.AntBuildPath)"
        AntAndroidSdkPath              ="$(AndroidSdkDir)"
        AntJavaHomePath                ="$(JavaHomeDir)"
        AntBuildType                   ="%(AntBuild.AntBuildType)"
        AntLibraryName                 ="%(AntBuild.AntLibraryName)"
        JVMHeapInitial                 ="%(AntBuild.JVMHeapInitial)"
        JVMHeapMaximum                 ="%(AntBuild.JVMHeapMaximum)"
        IgnoreJavaOpts                 ="%(AntBuild.IgnoreJavaOpts)"
        
        TrackerLogDirectory            ="%(AntBuild.TrackerLogDirectory)"

        TLogReadFiles                  ="@(AntBuildTLogReadFiles)"
        TLogWriteFiles                 ="@(AntBuildTLogWriteFiles)"
        ToolExe                        ="$(AntBuildToolExe)"
        ToolPath                       ="$(AntBuildToolPath)"
        TrackFileAccess                ="$(TrackFileAccess)"
        MinimalRebuildFromTracking     ="$(AntBuild_MinimalRebuildFromTracking)"

        AcceptableNonZeroExitCodes     ="%(AntBuild.AcceptableNonZeroExitCodes)"

        GCCToolPath                    ="$(AntBatPath)"
    >
      <Output TaskParameter="SkippedExecution" PropertyName="AntBuildSkippedExecution" />
      <Output TaskParameter="OutputFile" PropertyName="ApkPath" />
      <Output TaskParameter="PackageName" PropertyName="PackageName" />
      <Output TaskParameter="ActivityName" PropertyName="ActivityName" />
    </AntBuild>

  </Target>


	<!-- *******************************************************************************************
        PostAntDeploy
       ******************************************************************************************* -->
  
  <Target Name="PostAntDeploy"
      AfterTargets="AntBuild"
      DependsOnTargets="_AddAntBuild;_AddAdbDeploy"
      Condition="'$(ConfigurationType)'=='Application' and '@(Deploy)' != ''"
    >

    <PropertyGroup>
      <AdbDeploy_MinimalRebuildFromTracking Condition="'$(BuildType)' != 'Build' or '$(ForceRebuild)' == 'true'">false</AdbDeploy_MinimalRebuildFromTracking>
      <AdbDeploy_MinimalRebuildFromTracking Condition="'$(AdbDeploy_MinimalRebuildFromTracking)' == ''">true</AdbDeploy_MinimalRebuildFromTracking>
      <AdbDeploySkip Condition="'%(Deploy.DeploymentType)' != 'DeployOff'">false</AdbDeploySkip>
      <AdbDeploySkip Condition="'%(Deploy.DeploymentType)' == 'DeployOff'">true</AdbDeploySkip>
    </PropertyGroup>

      <Message Text="$(CRLF)$(CRLF)Deploying... ( Use 'Build -> Cancel' - to halt deploy )$(CRLF)" Importance="High" Condition="'$(AdbDeploySkip)' == 'false'" />

      <PropertyGroup>
        <DeviceArgs Condition="'%(Deploy.DeploymentType)' == 'DeployOff'"></DeviceArgs>
        <DeviceArgs Condition="'%(Deploy.DeploymentType)' == 'DeployToAny'"></DeviceArgs>
        <DeviceArgs Condition="'%(Deploy.DeploymentType)' == 'DeployToDevice'">-d</DeviceArgs>
        <DeviceArgs Condition="'%(Deploy.DeploymentType)' == 'DeployToEmulator'">-e</DeviceArgs>
        <DeviceArgs Condition="'%(Deploy.DeploymentType)' == 'DeployToSpecific'">-s</DeviceArgs>
        <SpecificTargetName Condition="'%(Deploy.DeploymentType)' != 'DeployToSpecific'"></SpecificTargetName>
        <SpecificTargetName Condition="'%(Deploy.DeploymentType)' == 'DeployToSpecific'">%(Deploy.DeploySpecificTargetName)</SpecificTargetName>
      </PropertyGroup>

      <PropertyGroup>
        <UninstallArgs Condition="'%(Deploy.DeployUninstall)' == 'None'"></UninstallArgs>
        <UninstallArgs Condition="'%(Deploy.DeployUninstall)' == 'Uninstall'">uninstall {PackageName}</UninstallArgs>
        <UninstallArgs Condition="'%(Deploy.DeployUninstall)' == 'UninstallKeep'">shell pm uninstall -k {PackageName}</UninstallArgs>
      </PropertyGroup>

      <PropertyGroup>
        <InstallArgs Condition="'%(Deploy.DeployInstall)' == 'Reinstall'">install -r {ApkPath}</InstallArgs>
        <InstallArgs Condition="'%(Deploy.DeployInstall)' == 'Install'">install {ApkPath}</InstallArgs>
      </PropertyGroup>

      <PropertyGroup>
        <AntBuildPath>%(AntBuild.AntBuildPath)</AntBuildPath>
        <AntBuildType>%(AntBuild.AntBuildType)</AntBuildType>
      </PropertyGroup>

    <!-- Wait for device to respond. So adb plays ball... -->
    <AdbDeploy Condition="'$(AdbDeploySkip)' == 'false'"
               
        BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
                        
        AntBuildPath                   ="$(AntBuildPath)"
        AntBuildType                   ="$(AntBuildType)"
        
        TrackerLogDirectory            ="%(Deploy.TrackerLogDirectory)"

        TLogReadFiles                  ="@(DeployTLogReadFiles)"
        TLogWriteFiles                 ="@(DeployTLogWriteFiles)"
        TrackFileAccess                ="$(TrackFileAccess)"
        MinimalRebuildFromTracking     ="$(Deploy_MinimalRebuildFromTracking)"

        AcceptableNonZeroExitCodes     ="%(Deploy.AcceptableNonZeroExitCodes)"

        AdbPath                        ="$(AndroidAdbPath)"
        DeviceArgs                     ="$(DeviceArgs) $(SpecificTargetName)"
        Params                         ="wait-for-device"
    >
    </AdbDeploy>

    <!-- Uninstall step, if required... -->
    <AdbDeploy Condition="'%(Deploy.DeployUninstall)' != 'None' and '$(AdbDeploySkip)' == 'false'"
               
        BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
                        
        AntBuildPath                   ="$(AntBuildPath)"
        AntBuildType                   ="$(AntBuildType)"
        
        TrackerLogDirectory            ="%(Deploy.TrackerLogDirectory)"

        TLogReadFiles                  ="@(DeployTLogReadFiles)"
        TLogWriteFiles                 ="@(DeployTLogWriteFiles)"
        TrackFileAccess                ="$(TrackFileAccess)"
        MinimalRebuildFromTracking     ="$(Deploy_MinimalRebuildFromTracking)"

        AcceptableNonZeroExitCodes     ="%(Deploy.AcceptableNonZeroExitCodes)"

        AdbPath                        ="$(AndroidAdbPath)"
        DeviceArgs                     ="$(DeviceArgs) $(SpecificTargetName)"
        Params                         ="$(UninstallArgs)"
    >
    </AdbDeploy>

    <!-- Install step, if required... -->
    <AdbDeploy Condition="'$(AdbDeploySkip)' == 'false'"
        BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
                        
        AntBuildPath                   ="$(AntBuildPath)"
        AntBuildType                   ="$(AntBuildType)"
        
        TrackerLogDirectory            ="%(Deploy.TrackerLogDirectory)"

        TLogReadFiles                  ="@(DeployTLogReadFiles)"
        TLogWriteFiles                 ="@(DeployTLogWriteFiles)"
        TrackFileAccess                ="$(TrackFileAccess)"
        MinimalRebuildFromTracking     ="$(Deploy_MinimalRebuildFromTracking)"

        AcceptableNonZeroExitCodes     ="%(Deploy.AcceptableNonZeroExitCodes)"

        AdbPath                        ="$(AndroidAdbPath)"
        DeviceArgs                     ="$(DeviceArgs) $(SpecificTargetName)"
        Params                         ="$(InstallArgs)"
        GenerateCmdFilePath            ="$(IntDir)\vs-android_launch.cmd"
    >
    </AdbDeploy>

  </Target>



  <!-- *******************************************************************************************
        Deploy - One-off deploys
       ******************************************************************************************* -->

  <Target Name="Deploy"
      Condition="'$(ConfigurationType)'=='Application'"
      DependsOnTargets="_AdbDeployStep;"
    >
  </Target>
    

  <PropertyGroup>
    <PrepareForBuildDependsOn>PlatformPrepareForBuild;$(PrepareForBuildDependsOn)</PrepareForBuildDependsOn>
    <PrepareForBuildDependsOn Condition="'$(ConfigurationType)'=='Application'">PlatformPrepareForBuild;PlatformPrepareForBuild_AntBuild;$(PrepareForBuildDependsOn)</PrepareForBuildDependsOn>
  </PropertyGroup>



  <!-- Override the Microsoft.CppBuild.targets stuff -->
  <Import Project="$(VCTargetsPath)\Platforms\Android\vs-android.CppBuild.targets" />
  
	
	
  <!-- *******************************************************************************************
        PlatformPrepareForBuild target
       ******************************************************************************************* -->
  
  <Target Name="PlatformPrepareForBuild" DependsOnTargets="$(PlatformPrepareForBuildDependsOn)">

    <PropertyGroup>
      <CRLF>%0D%0A</CRLF>
      <NDKMissing>Could not find the Android NDK, check that your ANDROID_NDK_ROOT path is correct!$(CRLF)It's currently: '$(AndroidNdkDir)'</NDKMissing>
      <NDKDownload>The NDK can be downloaded at this URL:$(CRLF)http://developer.android.com/sdk/ndk/index.html</NDKDownload>
      <NDKMissingToolchain>Possibly the toolchain '$(PlatformToolset)' does not exist in this version of the NDK.</NDKMissingToolchain>
      <NDKWrongVersion>vs-android requires at least the r8b version of the NDK installed.$(CRLF)Also, check that your ANDROID_NDK_ROOT path is correct!$(CRLF)It's currently: '$(AndroidNdkDir)'</NDKWrongVersion>
    </PropertyGroup>

    <!-- Error out if the project references a missing platform toolset -->
    <VCMessage Code="MSB8008" Type="Error" Arguments="$(PlatformToolset)" Condition="!(exists('$(VCTargetsPath)\Platforms\Android\PlatformToolsets\$(PlatformToolset)\Microsoft.Cpp.Android.$(PlatformToolset).targets'))"/>

    <!-- Android NDK Checks -->
    <Error Condition="!exists('$(AndroidNdkDir)')"             
           Text="$(NDKMissing)$(CRLF)$(NDKDownload)"></Error>
    <Error Condition="!exists('$(GccToolsPath)\$(GccCompiler)')"  
           Text="$(NDKMissing)$(CRLF)$(NDKDownload)$(CRLF)$(NDKMissingToolchain)"></Error>
    <Error Condition="!exists('$(GccToolsPath)\$(GccLibrarian)')" 
           Text="$(NDKMissing)$(CRLF)$(NDKDownload)$(CRLF)$(NDKMissingToolchain)"></Error>
    <Error Condition="!exists('$(GccToolsPath)\$(GccLinker)')"    
           Text="$(NDKMissing)$(CRLF)$(NDKDownload)$(CRLF)$(NDKMissingToolchain)"></Error>

    <!-- x86 vs arm Checks -->
    <Error Condition="'$(PlatformShortName)' == 'x86' and '$(AndroidArch)' != 'x86'" 
           Text="Architecture must be set to x86 for the x86 toolchain!"></Error>
    <Error Condition="'$(PlatformShortName)' == 'arm' and ( '$(AndroidArch)' == 'mips' or '$(AndroidArch)' == 'x86' )" 
           Text="Architecture must be set to arm for the arm toolchain!"></Error>
    <Error Condition="'$(PlatformShortName)' == 'mips' and '$(AndroidArch)' != 'mips'" 
           Text="Architecture must be set to mips for the mips toolchain!"></Error>

    <!-- NDK min version check -->
    <Error Condition="!exists('$(AndroidNdkDir)\sources\cxx-stl\gnu-libstdc++\$(GccVersion)\libs\$(ArchStlDirName)\libgnustl_static.a')"
           Text="$(NDKWrongVersion)"></Error>

    <Warning Condition="'$(AndroidArch)' == 'x86'"
           Text="The x86 toolchain isn't fully tested with vs-android. Use at your own risk."></Warning>
    <Warning Condition="'$(AndroidArch)' == 'mips'"
           Text="The MIPS toolchain isn't fully tested with vs-android. Use at your own risk."></Warning>
    
  </Target>

  <Target Name="PlatformPrepareForBuild_AntBuild" DependsOnTargets="$(PlatformPrepareForBuildDependsOn)">

    <PropertyGroup>
      <CRLF>%0D%0A</CRLF>
      <SDKMissing>Could not find the Android SDK. Have you run the SDK Manager? Try setting the ANDROID_HOME environment variable to the SDK root.</SDKMissing>
      <SDKDownload>The Android SDK can be downloaded at this URL:$(CRLF)http://developer.android.com/sdk/index.html</SDKDownload>
      <JavaMissing>Could not find the Java installation, check that your JAVA_HOME path is correct!$(CRLF)It's currently: '$(JavaHomeDir)'</JavaMissing>
      <JavaDownload>The Java JDK can be downloaded at this URL:$(CRLF)http://www.oracle.com/technetwork/java/javase/downloads/index.html$(CRLF)Be sure to download the 32-bit version (x86) of the JDK, even if you're running 64-bit Windows.</JavaDownload>
      <AntMissing>Could not find the Apache Ant installation, check that your ANT_HOME path is correct!$(CRLF)It's currently: '$(AntDir)'</AntMissing>
      <AntDownload>Apache Ant can be downloaded at this URL:$(CRLF)http://ant.apache.org/</AntDownload>
    </PropertyGroup>
    
    <!-- .apk building needs all of these -->
    
    <!-- Android SDK Checks -->
    <Error Condition="!exists('$(AndroidSdkDir)')"    Text="$(SDKMissing)$(CRLF)$(SDKDownload)"></Error>
    <Error Condition="!exists('$(AndroidAdbPath)')"   Text="$(SDKMissing)$(CRLF)$(SDKDownload)"></Error>

    <!-- Java Home Checks -->
    <Error Condition="!exists('$(JavaCompilerPath)')" Text="$(JavaMissing)$(CRLF)$(JavaDownload)"></Error>

    <!-- Apache Ant Checks -->
    <Error Condition="!exists('$(AntDir)')"       Text="$(AntMissing)$(CRLF)$(AntDownload)"></Error>
    <Error Condition="!exists('$(AntBatPath)')"   Text="$(AntMissing)$(CRLF)$(AntDownload)"></Error>

  </Target>
	

  <Import Project="$(VCTargetsPath)\Platforms\Android\PlatformToolsets\$(PlatformToolset)\Microsoft.Cpp.Android.$(PlatformToolset).targets" Condition="(exists('$(VCTargetsPath)\Platforms\Android\PlatformToolsets\$(PlatformToolset)\Microsoft.Cpp.Android.$(PlatformToolset).targets'))" />
  <Import Project="$(VCTargetsPath)\Platforms\Android\ImportAfter\*.targets" Condition="Exists('$(VCTargetsPath)\Platforms\Android\ImportAfter')" />
</Project>



